spring.application.name=UsTime_Backend

#server port
server.port=8085

#application.properties에서 기본 프로파일 설정
spring.profiles.active=prod

#DB
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.url=jdbc:mariadb://ec2-52-79-90-1.ap-northeast-2.compute.amazonaws.com:3306/ustime?useUnicode=true&characterEncoding=utf8&serverTimezone=UTC&allowMultiQueries=true
spring.datasource.username=duhwan
spring.datasource.password=5743

#MyBatis
mybatis.type-aliases-package=com.duhwan.ustime_backend.dto
mybatis.mapper-locations=classpath:mapper/*.xml

#AWS S3
aws.s3.bucket-name= ustime-bucket
aws.s3.region=ap-northeast-2
aws.credentials.access-key=${AWS_ACCESS_KEY_ID}
aws.credentials.secret-key=${AWS_SECRET_ACCESS_KEY}
cloudfront.domain-name= https://dsgbhujfgr9ij.cloudfront.net

#JWT
SECRET_KEY=mySuperSecretKeyWhichIsAtLeast512BitsLongMySuperSecretKeyWhichIsAtLeast512BitsLongdfsdfsdfsdfsdf
#만료 1시간
EXPIRATION_TIME=3600000

# HikariCP 설정
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=10
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.leak-detection-threshold=30000

#이렇게 설정하면 Spring이 요청의 Content-Type을 더 정확하게 판별할 수 있습니다.
spring.mvc.contentnegotiation.favor-parameter=true
spring.mvc.contentnegotiation.parameter-name=format